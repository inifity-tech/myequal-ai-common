[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "myequal-ai-common"
version = "0.2.0"
description = "Common utilities and shared code for MyEqual AI microservices"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "sqlmodel>=0.0.22",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.7.0",
    "tenacity>=9.0.0",
    "datadog>=0.51.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-anyio>=0.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.393",
    "build>=1.0.0",
    "toml>=0.10.2",
]

[tool.hatch.build.targets.wheel]
packages = ["src/myequal_ai_common"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["myequal_ai_common"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", "**/.pytest_cache"]
pythonVersion = "3.12"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateUsage = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "anyio: marks tests that use anyio (deselect with '-m \"not anyio\"')",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]