name: Publish Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Verify tag matches version
      run: |
        TAG_VERSION=${GITHUB_REF_NAME#v}
        PACKAGE_VERSION=$(uv run python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Error: Tag version ($TAG_VERSION) doesn't match package version ($PACKAGE_VERSION)"
          exit 1
        fi
        echo "Version check passed: $TAG_VERSION"
    
    - name: Install build dependencies
      run: |
        uv pip install --system build toml
    
    - name: Build package
      run: |
        python -m build
    
    - name: Publish to GitHub Packages
      run: |
        uv pip install --system twine
        python -m twine upload \
          --repository-url https://npm.pkg.github.com \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          dist/*
      continue-on-error: true  # Allow to fail since GitHub Packages Python support is limited
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}